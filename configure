
# Define all functions

# Sets the variable to the one specified by the user.
# Parameters
#	1 - Variable Name
#	2 - Default Value
#	3 - Description

function set_param {

	echo "Variable Name: $1"
	echo $3
	echo "Current Value: $2"
	echo -n "New Value (Enter to keep current value): "

	read return_value

	if [ -z "$return_value" ]; then
		return_value=$2
	fi

	echo "Variable Is Set To : $return_value"
	echo ""

}

# Tests whether the specified file exists in the directory.
# Used to verify whether the locations of the packages are accurate.
# Parameters
#	1 - Package name
#	2 - Directory
#	3 - File

function check_package_terminate {

	echo -n "Checking whether $1 is configured properly... "
	if [ -f $2/$3 ]; then
		echo "Success!"
	else
		echo ""
		echo ""
		echo "ERROR: $1 does not contain $3."
		echo "       Package does not exist at this location : \"$2\"."
		echo "       Terminating configure. No files created."
		exit 1
	fi

}

# This is the "main function"

echo "Starting configure script for SNOGoggles..."
echo " "
echo -n "Would you like to see advanced options? [No]: "
read ADVANCED_OPTIONS
echo -n "Would you like to set Geant4, ROOT, SCons and RAT individually? [No]: "
read SET_NOT_SNOCAVE
echo " "

if [ "$ADVANCED_OPTIONS" = "Yes" ]; then

	set_param ROOT_VERSION 5.28.00 "The version number of ROOT."
	ROOT_VERSION=$return_value

	set_param GEANT4_VERSION 4.9.4.p01 "The version number of Geant4."
	GEANT4_VERSION=$return_value

	set_param SCONS_VERSION 2.0.1 "The version number of SCons."
	SCONS_VERSION=$return_value

	set_param GLEW_BASE_DIR /usr "The home directory for GLEW."
	GLEW_BASE_DIR=$return_value

else

	ROOT_VERSION=5.28.00
	GEANT4_VERSION=4.9.4.p01
	SCONS_VERSION=2.0.1

	GLEW_BASE_DIR=/usr

fi

if [ "$SET_NOT_SNOCAVE" = "Yes" ]; then

	set_param GEANT4_BASE_DIR "" "The home directory of Geant4."
	GEANT4_BASE_DIR=$return_value

	set_param ROOTSYS "" "The home directory of ROOT."
	ROOTSYS=$return_value

	set_param SCONS_BASE_DIR "" "The home directory of SCons."
	SCONS_BASE_DIR=$return_value

	set_param RAT_BASE_DIR "" "The home directory of RAT."
	RAT_BASE_DIR=$return_value

else

	set_param SNOCAVE_DIR "" "Path to the snocave directory."
	SNOCAVE_DIR=$return_value

	RAT_BASE_DIR=$SNOCAVE_DIR/sasquatch/dev/rat
	GEANT4_BASE_DIR=$SNOCAVE_DIR/libraries/geant$GEANT4_VERSION
	ROOTSYS=$SNOCAVE_DIR/libraries/root-$ROOT_VERSION
	SCONS_BASE_DIR=$SNOCAVE_DIR/libraries/scons-$SCONS_VERSION

fi

set_param SFML_BASE_DIR "" "Path to the SFML directory."
SFML_BASE_DIR=$return_value

set_param XERCESCROOT "" "Path to the Xerces-C++ home directory."
XERCESCROOT=$return_value


echo "Testing to ensure that all packages exist at specified directories..."

check_package_terminate RAT $RAT_BASE_DIR include/RAT/DS/EV.hh
check_package_terminate Geant4 $GEANT4_BASE_DIR include/G4Event.hh

# Checks whether Geant4 has GDML_BUILD_ENABLED
if [ -f $GEANT4_BASE_DIR/include/G4GDMLParser.hh ]; then
	echo "     Geant4 also has the GDML parser built!"
else
	echo "     WARNING: Geant4 does not have the GDML parser built!"
	echo "              May cause compilation failure."
fi

check_package_terminate ROOT $ROOTSYS include/TVector3.h
check_package_terminate SCons $SCONS_BASE_DIR scons.1
check_package_terminate SFML $SFML_BASE_DIR include/SFML/OpenGL.hpp
check_package_terminate Xerces-C++ $XERCESCROOT include/xercesc/dom/DOM.hpp
check_package_terminate GLEW $GLEW_BASE_DIR include/GL/glew.h

echo ""

# env.ssh
echo -n "Creating env.sh... "

rm -f env.sh
echo '####### SNOGoggles environment #######' > env.sh
echo ' ' >> env.sh
echo 'export VIEWER_BASE_DIR='$PWD >> env.sh
echo ' ' >> env.sh
echo 'source '$GEANT4_BASE_DIR'/env.sh' >> env.sh
echo ' ' >> env.sh
echo 'export RAT_BASE_DIR='$RAT_BASE_DIR >> env.sh
echo 'export ROOTSYS='$ROOTSYS >> env.sh
echo 'export SFML_BASE_DIR='$SFML_BASE_DIR >> env.sh
echo 'export XERCESCROOT='$XERCESCROOT >> env.sh
echo 'export GLEW_BASE_DIR='$GLEW_BASE_DIR >> env.sh
echo ' ' >> env.sh
echo 'export PATH=$PATH:'$SCONS_BASE_DIR'/script:$VIEWER_BASE_DIR/bin' >> env.sh
echo 'export PYTHONPATH='$SCONS_BASE_DIR'/engine:$VIEWER_BASE_DIR/python' >> env.sh
echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib:$SFML_BASE_DIR/lib:$XERCESCROOT/lib:$GLEW_BASE_DIR/lib' >> env.sh
echo ' ' >> env.sh

echo "Done."

# env.csh

echo -n "Creating env.csh... "

rm -f env.csh
echo '####### SNOGoggles environment #######' > env.csh
echo ' ' >> env.csh
echo 'setenv VIEWER_BASE_DIR {$PWD}' >> env.csh
echo ' ' >> env.csh
echo 'source '$GEANT4_BASE_DIR'/env.csh' >> env.csh
echo ' ' >> env.csh
echo 'unsetenv RAT_BASE_DIR' >> env.csh
echo 'unsetenv ROOTSYS' >> env.csh
echo 'unsetenv SFML_BASE_DIR' >> env.csh
echo 'unsetenv XERCESCROOT' >> env.csh
echo 'unsetenv GLEW_BASE_DIR' >> env.csh
echo 'unsetenv PYTHONPATH' >> env.csh
echo ' ' >> env.csh
echo 'setenv RAT_BASE_DIR '$RAT_BASE_DIR >> env.csh
echo 'setenv ROOTSYS '$ROOTSYS >> env.csh
echo 'setenv SFML_BASE_DIR '$SFML_BASE_DIR >> env.csh
echo 'setenv XERCESCROOT '$XERCESCROOT >> env.csh
echo 'setenv GLEW_BASE_DIR '$GLEW_BASE_DIR >> env.csh
echo ' ' >> env.csh
echo 'setenv PATH {$PATH}:'$SCONS_BASE_DIR'/script:{$VIEWER_BASE_DIR}/bin' >> env.csh
echo 'setenv PYTHONPATH '$SCONS_BASE_DIR'/engine:{$VIEWER_BASE_DIR}/python' >> env.csh
echo 'setenv LD_LIBRARY_PATH {$LD_LIBRARY_PATH}:{$ROOTSYS}/lib:{$SFML_BASE_DIR}/lib:{$XERCESCROOT}/lib:{$GLEW_BASE_DIR}/lib' >> env.csh
echo ' ' >> env.csh

echo "Done."

echo ""
echo "Configure complete!"



